#!/usr/bin/env python3

import subprocess
import sys

def run_git(*args):
    output = subprocess.check_output(['git'] + list(args))
    return output.decode("utf-8").strip()

def commit_msgs(start_ref, end_ref):
    messages = run_git("log", "--format=%h|%s", end_ref + ".." + start_ref)
    for line in messages.split("\n"):
        line = line.strip()
        if line == "":
            continue
        sha, summary = line.split("|")
        yield (sha, summary)

def temp_msg(msg):
    return msg.startswith("oops ") or msg.startswith("checkpoint")

def main():
    temp_messages = []
    for line in sys.stdin.readlines():
        line = line.strip()
        local_branch, start_ref, remote_branch, end_ref = line.split(" ")
        for (sha, msg) in commit_msgs(start_ref, end_ref):
            if temp_msg(msg):
                temp_messages.append( (sha, msg) )
    if temp_messages:
        print("the following fixes should be rebased:")
        for ref, msg in temp_messages:
            print(ref, msg)
        sys.exit(1)

main()
